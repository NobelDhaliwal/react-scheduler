[{"C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\index.js":"1","C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\App.js":"2","C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\reportWebVitals.js":"3","C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\Components\\FirstSchedular.js":"4","C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\Components\\SecondScheduler.js":"5","C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\Components\\NewScheduler.js":"6","C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\Components\\TestSchedulers.js":"7"},{"size":512,"mtime":1611791793475,"results":"8","hashOfConfig":"9"},{"size":552,"mtime":1612215572323,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":4263,"mtime":1611891612656,"results":"12","hashOfConfig":"9"},{"size":1437,"mtime":1611820060164,"results":"13","hashOfConfig":"9"},{"size":7104,"mtime":1612210754699,"results":"14","hashOfConfig":"9"},{"size":7906,"mtime":1612216475846,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1nxk1fj",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\index.js",[],["33","34"],"C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\App.js",["35","36","37"],"C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\reportWebVitals.js",[],"C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\Components\\FirstSchedular.js",["38","39","40","41","42","43"],"import React, { useState } from 'react';\r\nimport {\r\n    Inject, ScheduleComponent, Day, Week, WorkWeek, \r\n    Month, Agenda, TimelineViews, TimelineMonth,\r\n    EventSettingsModel, GroupModel, DragAndDrop,\r\n     Resize, ResourcesDirective, ResourceDirective,ViewDirective,ViewsDirective\r\n} from \"@syncfusion/ej2-react-schedule\";\r\n\r\n\r\nconst FirstSchedular = () => {\r\n    const [localData, setLocalData] = useState([{\r\n        id: 2,\r\n        Subject: \"Visit To Doc\",\r\n        StartTime: new Date(2021, 0, 29, 16, 0),\r\n        EndTime: new Date(2021, 0, 29, 20, 0),\r\n        isAllDay: true,\r\n        // RecurrenceRule: \"FREQ=DAILY;INTERVAL=1;COUNT=10\",\r\n        ResourceId: 1,\r\n        GroupId: 1,\r\n    }, {\r\n        Id: 2,\r\n        StartTime: new Date(2021, 0, 31, 12, 30),\r\n        EndTime: new Date(2021, 0, 31, 15, 0),\r\n        Subject: \"Meeting\",\r\n        IsReadonly: true, //FOR MAking edit and delete option disable \r\n        IsBlock:true,\r\n        ResourceId: 2,\r\n        GroupId: 2,\r\n    },\r\n    {\r\n        Id: 3,\r\n        StartTime: new Date(2021, 1, 4, 8, 30),\r\n        EndTime: new Date(2021, 1, 4, 9, 30),\r\n        Subject: \"Swimming\",\r\n        IsReadonly: true,\r\n        ResourceId: 3,\r\n        GroupId: 2,\r\n    }]);\r\n    const [resourceDataSource, setResouceDataSource] = useState([\r\n        { Name: \"John\", Id: 1, Color: \"#ea7a57\" },\r\n        { Name: \"Steve\", Id: 2, Color: \"#357CD2\" },\r\n        { Name: \"James\", Id: 3, Color: \"#7fa900\" }\r\n    ]);\r\n    const [groupData, setGroupData] = useState({\r\n        resources: [\"Resources\", \"Groups\"]\r\n    });\r\n    const [groupDataSource, setGroupDataSource] = useState([\r\n        { Name: \"Task 1\", Id: 1, Color: \"#df5286\", GroupId: 1 },//child resource\r\n        { Name: \"Task 2\", Id: 2, Color: \"#5978ee\", GroupId: 2 },\r\n        { Name: \"Task 3\", Id: 3, Color: \"#00bdae\", GroupId: 2 }\r\n    ]);\r\n \r\n    return (\r\n        <div>\r\n            {/* <DropDownListComponent  /> */}\r\n            <ScheduleComponent currentView=\"Month\" width='100%' height='100%' \r\n             \r\n            selectedDate={new Date(2021, 0, 28)}\r\n                eventSettings={{ dataSource: localData }}\r\n                // views={[\"Days\", \"Week\", \"Month\", \"TimelineDay\", \"TimelineWeek\"]}\r\n                group={groupData} \r\n               \r\n                >\r\n                    \r\n                    <ViewsDirective>\r\n                        {/* startHour ,endHour to show how much time u wnt to display */}\r\n                        {/* interval property to show how many days ,week or month u want \r\n                        to show ex:- interval={2} */}\r\n                        <ViewDirective option=\"Day\" ></ViewDirective>\r\n                        <ViewDirective option=\"Week\" isSelected={true}></ViewDirective>\r\n                        {/* isSelected will show view that view when page upload */}\r\n                        <ViewDirective option=\"Month\" ></ViewDirective>\r\n                        {/* <ViewDirective option=\"WorkWeek\"></ViewDirective> */}\r\n                        <ViewDirective option=\"Agenda\"></ViewDirective>\r\n                        <ViewDirective option=\"MonthAgenda\"></ViewDirective>\r\n                        <ViewDirective option=\"TimelineDay\"></ViewDirective>\r\n                        <ViewDirective option=\"TimelineMonth\"></ViewDirective>\r\n                         </ViewsDirective> \r\n                <ResourcesDirective>\r\n                   \r\n                    <ResourceDirective field=\"ResourceId\" title=\"Resource Name\" name=\"Resources\"\r\n                        textField=\"Name\" idField=\"Id\" colorField=\"Color\" dataSource={resourceDataSource}>\r\n                    </ResourceDirective>\r\n                    <ResourceDirective field=\"GroupId\" name=\"Groups\" title=\"Group Name\"\r\n                        textField=\"Name\" idField=\"Id\" colorField=\"Color\" allowMultiple={true}\r\n                        groupIDField=\"GroupId\"\r\n                        dataSource={groupDataSource}>\r\n                    </ResourceDirective>\r\n                </ResourcesDirective>\r\n\r\n                <Inject services={[Day, Week, WorkWeek, Month, Agenda,\r\n                    DragAndDrop, Resize, TimelineViews, TimelineMonth]} />\r\n            </ScheduleComponent>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FirstSchedular;\r\n","C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\Components\\SecondScheduler.js",[],"C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\Components\\NewScheduler.js",["44","45","46","47","48","49","50","51","52","53","54"],"import React, { useState,useRef } from 'react';\r\nimport {\r\n    Inject, ScheduleComponent, Day, Week, WorkWeek,\r\n    Month, Agenda, TimelineViews, TimelineMonth,\r\n    EventSettingsModel, GroupModel, DragAndDrop,    Schedule,\r\n    Resize, ResourcesDirective, ResourceDirective, ViewDirective, ViewsDirective,\r\n    enableTooltip,\r\n} from \"@syncfusion/ej2-react-schedule\";\r\nimport \"./NewScheduler.css\";\r\nimport {DropDownListComponent} from \"@syncfusion/ej2-react-dropdowns\";\r\nimport {DateTimePickerComponent} from \"@syncfusion/ej2-react-calendars\";\r\nimport {L10n} from \"@syncfusion/ej2-base\";\r\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\r\n\r\n// L10n.load({\r\n//     \"en-US\":{\r\n//         \"schedule\":{\r\n//             \"saveButton\":\"Add\",\r\n//             \"cancelButton\":\"Close\",\r\n//             \"deleteButton\":\"Remove\",\r\n//             \"newEvent\":\"Add Event\"\r\n//         }\r\n//     }\r\n// })\r\nfunction NewScheduler(props) {\r\n    const [localData, setLocalData] = useState([{\r\n        Id: 1,\r\n        Subject: \"Visit To Doc\",\r\n        StartTime: new Date(2021, 1, 5, 16, 0),\r\n        EndTime: new Date(2021, 1, 5, 20, 0),\r\n        //isAllDay: true,\r\n        // RecurrenceRule: \"FREQ=DAILY;INTERVAL=1;COUNT=10\",\r\n        ResourceId: 1,\r\n        GroupId: 1,\r\n        Description:\"Consulting\"\r\n    }, {\r\n        Id: 2,\r\n        StartTime: new Date(2021, 1, 2, 12, 30),\r\n        EndTime: new Date(2021, 1, 2, 15, 0),\r\n        Subject: \"Meeting\",\r\n        // IsReadonly: true, //FOR MAking edit and delete option disable \r\n        // IsBlock: true,\r\n        ResourceId: 2,\r\n        GroupId: 2,\r\n        Description:\"Project Demo\"\r\n    },\r\n    {\r\n        Id: 3,\r\n        StartTime: new Date(2021, 1, 6, 7, 30),\r\n       \r\n        EndTime: new Date(2021, 1, 6, 8, 30),\r\n        Subject: \"Swimming\",\r\n        // isAllDay: true,\r\n        // IsReadonly: true,\r\n        ResourceId: 3,\r\n        GroupId: 3,\r\n        Description:\"Learning Class\"\r\n    },\r\n]);\r\n    \r\n    // const inputRef=useRef(null);\r\n    // const buttonRef=useRef(null);\r\n   \r\n    const [resourceDataSource, setResouceDataSource] = useState([\r\n        { Name: \"John\", Id: 1, Color: \"#ea7a57\" },\r\n        { Name: \"Steve\", Id: 2, Color: \"#357CD2\" },\r\n        { Name: \"James\", Id: 3, Color: \"#7fa900\" }\r\n    ]);\r\n    const [groupData, setGroupData] = useState({\r\n        resources: [\"Resources\", \"Groups\"]\r\n    });\r\n    const [groupDataSource, setGroupDataSource] = useState([\r\n        { Name: \"Task 1\", Id: 1, Color: \"#df5286\", GroupId: 1 },//child resource\r\n        { Name: \"Task 2\", Id: 2, Color: \"#5978ee\", GroupId: 2 },\r\n        { Name: \"Task 3\", Id: 3, Color: \"#00bdae\", GroupId: 3 }\r\n    ]);\r\n  \r\n const editorWindowTemplate=()=>{\r\nreturn(\r\n  <table className=\"custom-event-editor\" style={{ width: '100%', cellpadding: '5' }}>\r\n      <tbody>\r\n      <tr><td className=\"e-textlabel\">Summary</td><td style={{ colspan: '4' }}>\r\n        <input id=\"Summary\" className=\"e-field e-input\" type=\"text\" name=\"Subject\" style={{ width: '100%' }} />\r\n      </td></tr>\r\n      <tr><td className=\"e-textlabel\">Status</td><td style={{ colspan: '4' }}>\r\n        <DropDownListComponent id=\"EventType\" placeholder='Choose status' data-name='EventType' className=\"e-field\" style={{ width: '100%' }}\r\n          dataSource={['New', 'Requested', 'Confirmed']}>\r\n        </DropDownListComponent>\r\n      </td></tr>\r\n          <tr><td className=\"e-textlabel\">From</td><td style={{ colspan: '4' }}>\r\n        <DateTimePickerComponent id=\"StartTime\" format='dd/MM/yy hh:mm a' data-name=\"StartTime\" value={new Date(props.startTime || props.StartTime)}\r\n          className=\"e-field\"></DateTimePickerComponent>\r\n      </td>\r\n      </tr>\r\n      <tr>\r\n          <td className=\"e-textlabel\">To</td><td style={{ colspan: '4' }}>\r\n        <DateTimePickerComponent id=\"EndTime\" format='dd/MM/yy hh:mm a' data-name=\"EndTime\" value={new Date(props.endTime || props.EndTime)}\r\n          className=\"e-field\"></DateTimePickerComponent>\r\n      </td>\r\n      </tr>\r\n      <tr>\r\n          <td className=\"e-textlabel\">Reason</td><td style={{ colspan: '4' }}>\r\n        <textarea id=\"Description\" className=\"e-field e-input\" name=\"Description\" rows={3} cols={50}\r\n          style={{ width: '100%', height: '60px !important', resize: 'vertical' }}></textarea>\r\n      </td>\r\n      </tr>\r\n          </tbody>\r\n          </table> \r\n);\r\n };\r\n//  const onAddClick=()=>{\r\n//      console.warn(\"call\");\r\n//      let Data = [{\r\n//         Id: 2,\r\n//         Subject: 'Conference',\r\n//         StartTime: new Date(2021, 1, 12, 9, 0),\r\n//         EndTime: new Date(2021, 1, 12, 10, 0),\r\n//         ResourceId: 2,\r\n//         GroupId: 2,\r\n//         Description:\"Project Demo\"\r\n//     }, {\r\n//         Id: 3,\r\n//         Subject: 'Meeting',\r\n//         StartTime: new Date(2021, 1, 15, 10, 0),\r\n//         EndTime: new Date(2021, 1, 15, 11, 30),\r\n//       //  IsAllDay: false\r\n//       ResourceId: 3,\r\n//       GroupId: 3,\r\n//       Description:\"Project Demo\"\r\n//     }];\r\n//  // inputRef.current.value=Data;\r\n// //   buttonRef.setAttribute('disabled', 'true')\r\n    \r\n    \r\n//  };\r\n    return (\r\n\r\n        <div>\r\n            {/* <DropDownListComponent  /> */}\r\n            {/* <ButtonComponent id='add' title='Add'  onClick={onAddClick}>Add</ButtonComponent> */}\r\n            <ScheduleComponent currentView=\"Month\" width='100%' height='100%'\r\n            \r\n                selectedDate={new Date(2021, 1, 1)}\r\n                eventSettings={{ dataSource: localData}}\r\n              editorTemplate={editorWindowTemplate}\r\n                group={groupData}\r\n                // onClick={addEvent}\r\n               \r\n            >\r\n\r\n                <ViewsDirective>\r\n\r\n                    <ViewDirective option=\"Day\" ></ViewDirective>\r\n                    <ViewDirective option=\"Week\" ></ViewDirective>\r\n                    <ViewDirective option=\"Month\" ></ViewDirective>\r\n                      <ViewDirective option=\"Agenda\"></ViewDirective>\r\n                    <ViewDirective option=\"MonthAgenda\"></ViewDirective>\r\n                    <ViewDirective option=\"TimelineDay\"></ViewDirective>\r\n                    <ViewDirective option=\"TimelineMonth\"></ViewDirective>\r\n                </ViewsDirective>\r\n                <ResourcesDirective>\r\n\r\n                    <ResourceDirective field=\"ResourceId\" title=\"Resource Name\" name=\"Resources\"\r\n                        textField=\"Name\" idField=\"Id\" colorField=\"Color\" dataSource={resourceDataSource}>\r\n                    </ResourceDirective>\r\n                    <ResourceDirective field=\"GroupId\" name=\"Groups\" title=\"Group Name\"\r\n                        textField=\"Name\" idField=\"Id\" colorField=\"Color\" allowMultiple={true}\r\n                        groupIDField=\"GroupId\"\r\n                        dataSource={groupDataSource}>\r\n                    </ResourceDirective>\r\n                </ResourcesDirective>\r\n\r\n                <Inject services={[Day, Week, WorkWeek, Month, Agenda,\r\n                    DragAndDrop, Resize, TimelineViews, TimelineMonth]} />\r\n            </ScheduleComponent>\r\n        </div>\r\n\r\n\r\n    )\r\n};\r\n\r\nexport default NewScheduler;","C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\Components\\TestSchedulers.js",["55","56","57","58","59","60","61","62","63","64","65","66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":22},{"ruleId":"71","severity":1,"message":"75","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":23},{"ruleId":"71","severity":1,"message":"76","line":8,"column":8,"nodeType":"73","messageId":"74","endLine":8,"endColumn":20},{"ruleId":"71","severity":1,"message":"77","line":5,"column":5,"nodeType":"73","messageId":"74","endLine":5,"endColumn":23},{"ruleId":"71","severity":1,"message":"78","line":5,"column":25,"nodeType":"73","messageId":"74","endLine":5,"endColumn":35},{"ruleId":"71","severity":1,"message":"79","line":11,"column":23,"nodeType":"73","messageId":"74","endLine":11,"endColumn":35},{"ruleId":"71","severity":1,"message":"80","line":39,"column":32,"nodeType":"73","messageId":"74","endLine":39,"endColumn":52},{"ruleId":"71","severity":1,"message":"81","line":44,"column":23,"nodeType":"73","messageId":"74","endLine":44,"endColumn":35},{"ruleId":"71","severity":1,"message":"82","line":47,"column":29,"nodeType":"73","messageId":"74","endLine":47,"endColumn":47},{"ruleId":"71","severity":1,"message":"83","line":1,"column":26,"nodeType":"73","messageId":"74","endLine":1,"endColumn":32},{"ruleId":"71","severity":1,"message":"77","line":5,"column":5,"nodeType":"73","messageId":"74","endLine":5,"endColumn":23},{"ruleId":"71","severity":1,"message":"78","line":5,"column":25,"nodeType":"73","messageId":"74","endLine":5,"endColumn":35},{"ruleId":"71","severity":1,"message":"84","line":5,"column":53,"nodeType":"73","messageId":"74","endLine":5,"endColumn":61},{"ruleId":"71","severity":1,"message":"85","line":7,"column":5,"nodeType":"73","messageId":"74","endLine":7,"endColumn":18},{"ruleId":"71","severity":1,"message":"86","line":12,"column":9,"nodeType":"73","messageId":"74","endLine":12,"endColumn":13},{"ruleId":"71","severity":1,"message":"87","line":13,"column":10,"nodeType":"73","messageId":"74","endLine":13,"endColumn":25},{"ruleId":"71","severity":1,"message":"79","line":26,"column":23,"nodeType":"73","messageId":"74","endLine":26,"endColumn":35},{"ruleId":"71","severity":1,"message":"80","line":64,"column":32,"nodeType":"73","messageId":"74","endLine":64,"endColumn":52},{"ruleId":"71","severity":1,"message":"81","line":69,"column":23,"nodeType":"73","messageId":"74","endLine":69,"endColumn":35},{"ruleId":"71","severity":1,"message":"82","line":72,"column":29,"nodeType":"73","messageId":"74","endLine":72,"endColumn":47},{"ruleId":"71","severity":1,"message":"83","line":1,"column":26,"nodeType":"73","messageId":"74","endLine":1,"endColumn":32},{"ruleId":"71","severity":1,"message":"77","line":5,"column":5,"nodeType":"73","messageId":"74","endLine":5,"endColumn":23},{"ruleId":"71","severity":1,"message":"78","line":5,"column":25,"nodeType":"73","messageId":"74","endLine":5,"endColumn":35},{"ruleId":"71","severity":1,"message":"84","line":5,"column":53,"nodeType":"73","messageId":"74","endLine":5,"endColumn":61},{"ruleId":"71","severity":1,"message":"85","line":7,"column":5,"nodeType":"73","messageId":"74","endLine":7,"endColumn":18},{"ruleId":"71","severity":1,"message":"88","line":7,"column":19,"nodeType":"73","messageId":"74","endLine":7,"endColumn":34},{"ruleId":"71","severity":1,"message":"86","line":12,"column":9,"nodeType":"73","messageId":"74","endLine":12,"endColumn":13},{"ruleId":"71","severity":1,"message":"87","line":13,"column":10,"nodeType":"73","messageId":"74","endLine":13,"endColumn":25},{"ruleId":"71","severity":1,"message":"79","line":26,"column":23,"nodeType":"73","messageId":"74","endLine":26,"endColumn":35},{"ruleId":"71","severity":1,"message":"80","line":64,"column":32,"nodeType":"73","messageId":"74","endLine":64,"endColumn":52},{"ruleId":"71","severity":1,"message":"81","line":69,"column":23,"nodeType":"73","messageId":"74","endLine":69,"endColumn":35},{"ruleId":"71","severity":1,"message":"82","line":72,"column":29,"nodeType":"73","messageId":"74","endLine":72,"endColumn":47},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'FirstSchedular' is defined but never used.","Identifier","unusedVar","'SecondScheduler' is defined but never used.","'NewScheduler' is defined but never used.","'EventSettingsModel' is defined but never used.","'GroupModel' is defined but never used.","'setLocalData' is assigned a value but never used.","'setResouceDataSource' is assigned a value but never used.","'setGroupData' is assigned a value but never used.","'setGroupDataSource' is assigned a value but never used.","'useRef' is defined but never used.","'Schedule' is defined but never used.","'enableTooltip' is defined but never used.","'L10n' is defined but never used.","'ButtonComponent' is defined but never used.","'ActionEventArgs' is defined but never used.","no-global-assign","no-unsafe-negation"]