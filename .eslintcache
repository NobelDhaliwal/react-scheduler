[{"C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\index.js":"1","C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\App.js":"2","C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\reportWebVitals.js":"3","C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\Components\\FirstSchedular.js":"4","C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\Components\\SecondScheduler.js":"5"},{"size":512,"mtime":1611791793475,"results":"6","hashOfConfig":"7"},{"size":352,"mtime":1611820025930,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":4350,"mtime":1611819145071,"results":"10","hashOfConfig":"7"},{"size":1437,"mtime":1611820060164,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1nxk1fj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\index.js",[],["24","25"],"C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\App.js",["26"],"C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\reportWebVitals.js",[],"C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\Components\\FirstSchedular.js",["27","28","29","30","31","32","33"],"import React, { useState } from 'react';\r\n// import Scheduler from 'react-scheduler-calendar';\r\n// import 'antd/dist/antd.css';\r\n// import 'antd/dist/antd.less';\r\nimport {\r\n    Inject, ScheduleComponent, Day, Week, WorkWeek, \r\n    Month, Agenda, TimelineViews, TimelineMonth,\r\n    EventSettingsModel, GroupModel, DragAndDrop,\r\n     Resize, ResourcesDirective, ResourceDirective,ViewDirective,ViewsDirective\r\n} from \"@syncfusion/ej2-react-schedule\";\r\n// import { Query } from '@syncfusion/ej2-data';\r\n// import { DropDownListComponent, FilteringEventArgs } from '@syncfusion/ej2-react-dropdowns';\r\n\r\nconst FirstSchedular = () => {\r\n    const [localData, setLocalData] = useState([{\r\n        id: 2,\r\n        Subject: \"Visit To Doc\",\r\n        StartTime: new Date(2021, 0, 28, 16, 0),\r\n        EndTime: new Date(2021, 0, 28, 18, 0),\r\n        isAllDay: true,\r\n        RecurrenceRule: \"FREQ=DAILY;INTERVAL=1;COUNT=2\",\r\n        ResourceId: 1,\r\n        GroupId: 1,\r\n    }, {\r\n        Id: 2,\r\n        StartTime: new Date(2021, 0, 31, 12, 30),\r\n        EndTime: new Date(2021, 0, 31, 15, 0),\r\n        Subject: \"Meeting\",\r\n        IsReadonly: true,\r\n        ResourceId: 2,\r\n        GroupId: 2,\r\n    },\r\n    {\r\n        Id: 3,\r\n        StartTime: new Date(2021, 1, 4, 8, 30),\r\n        EndTime: new Date(2021, 1, 4, 9, 30),\r\n        Subject: \"Swimming\",\r\n        IsReadonly: true,\r\n        ResourceId: 3,\r\n        GroupId: 2,\r\n    }]);\r\n    const [resourceDataSource, setResouceDataSource] = useState([\r\n        { Name: \"John\", Id: 1, Color: \"#ea7a57\" },\r\n        { Name: \"Steve\", Id: 2, Color: \"#357CD2\" },\r\n        { Name: \"James\", Id: 3, Color: \"#7fa900\" }\r\n    ]);\r\n    const [groupData, setGroupData] = useState({\r\n        resources: [\"Resources\", \"Groups\"]\r\n    });\r\n    const [groupDataSource, setGroupDataSource] = useState([\r\n        { Name: \"Task 1\", Id: 1, Color: \"#df5286\", GroupId: 1 },//child resource\r\n        { Name: \"Task 2\", Id: 2, Color: \"#5978ee\", GroupId: 2 },\r\n        { Name: \"Task 3\", Id: 3, Color: \"#00bdae\", GroupId: 2 }\r\n    ]);\r\n    return (\r\n        <div>\r\n            {/* <DropDownListComponent  /> */}\r\n            <ScheduleComponent currentView=\"Month\" width='100%' height='100%' \r\n            currentView=\"Week\"\r\n            selectedDate={new Date(2021, 0, 28)}\r\n                eventSettings={{ dataSource: localData }}\r\n                // views={[\"Days\", \"Week\", \"Month\", \"TimelineDay\", \"TimelineWeek\"]}\r\n                group={groupData} >\r\n                    <ViewsDirective>\r\n                        {/* startHour ,endHour to show how much time u wnt to display */}\r\n                        {/* interval property to show how many days ,week or month u want \r\n                        to show ex:- interval={2} */}\r\n                        <ViewDirective option=\"Day\" startHour=\"9:00\"  endHour=\"18:00\"></ViewDirective>\r\n                        <ViewDirective option=\"Week\" isSelected={true}></ViewDirective>\r\n                        {/* isSelected will show view that view when page upload */}\r\n                        <ViewDirective option=\"Month\" ></ViewDirective>\r\n                        {/* <ViewDirective option=\"WorkWeek\"></ViewDirective> */}\r\n                        {/* <ViewDirective option=\"Agenda\"></ViewDirective> */}\r\n                        <ViewDirective option=\"TimelineDay\"></ViewDirective>\r\n                        <ViewDirective option=\"TimelineMonth\"></ViewDirective>\r\n                    </ViewsDirective>\r\n                <ResourcesDirective>\r\n                    <ResourceDirective field=\"ResourceId\" title=\"Resource Name\" name=\"Resources\"\r\n                        textField=\"Name\" idField=\"Id\" colorField=\"Color\" dataSource={resourceDataSource}>\r\n                    </ResourceDirective>\r\n                    <ResourceDirective field=\"GroupId\" name=\"Groups\" title=\"Group Name\"\r\n                        textField=\"Name\" idField=\"Id\" colorField=\"Color\" allowMultiple={true}\r\n                        groupIDField=\"GroupId\"\r\n                        dataSource={groupDataSource}>\r\n                    </ResourceDirective>\r\n                </ResourcesDirective>\r\n\r\n                <Inject services={[Day, Week, WorkWeek, Month, Agenda,\r\n                    DragAndDrop, Resize, TimelineViews, TimelineMonth]} />\r\n            </ScheduleComponent>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FirstSchedular;\r\n","C:\\Users\\nobel\\Documents\\ADB\\ADB-test-scheduler\\testscheduler\\src\\Components\\SecondScheduler.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":2,"column":8,"nodeType":"40","messageId":"41","endLine":2,"endColumn":22},{"ruleId":"38","severity":1,"message":"42","line":8,"column":5,"nodeType":"40","messageId":"41","endLine":8,"endColumn":23},{"ruleId":"38","severity":1,"message":"43","line":8,"column":25,"nodeType":"40","messageId":"41","endLine":8,"endColumn":35},{"ruleId":"38","severity":1,"message":"44","line":15,"column":23,"nodeType":"40","messageId":"41","endLine":15,"endColumn":35},{"ruleId":"38","severity":1,"message":"45","line":42,"column":32,"nodeType":"40","messageId":"41","endLine":42,"endColumn":52},{"ruleId":"38","severity":1,"message":"46","line":47,"column":23,"nodeType":"40","messageId":"41","endLine":47,"endColumn":35},{"ruleId":"38","severity":1,"message":"47","line":50,"column":29,"nodeType":"40","messageId":"41","endLine":50,"endColumn":47},{"ruleId":"48","severity":1,"message":"49","line":59,"column":13,"nodeType":"50","endLine":59,"endColumn":31},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'FirstSchedular' is defined but never used.","Identifier","unusedVar","'EventSettingsModel' is defined but never used.","'GroupModel' is defined but never used.","'setLocalData' is assigned a value but never used.","'setResouceDataSource' is assigned a value but never used.","'setGroupData' is assigned a value but never used.","'setGroupDataSource' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]